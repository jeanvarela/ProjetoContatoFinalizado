<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:adm="http://github.com/adminfaces"
                 xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                template="../../../WEB-INF/templates/template.xhtml">


   <ui:define name="head-end">
   	    <script src="http://maps.google.com/maps/api/js?key=AIzaSyBMz9kG-b4bxBqmsQOquZaU0z5pUr89zTs" type="text/javascript"></script>
		<h:outputScript library="mapa" name="jquery-ui.custom.min.js"/>
		<h:outputStylesheet library="mapa" name="estiloNovo.css"/> 	
	        
        <style type="text/css">
            .ui-datatable .ui-datatable-header {
                text-align: right !important;
            }
        </style>
    </ui:define>

    <ui:define name="title">
        Contatos
    </ui:define>


	<ui:define name="body">
			<h:form prependId="false">
					<div class="box box-primary">
						<div class="box-header with-border">				
				        	<div class="boxbody">
				        		 <div class="form-group">
			                    	  <p:outputLabel value="Nome" for="nomeContato" />
									  <p:inputText value="#{contato.nome}" id="nomeContato" styleClass="form-control"
												   required="true" autocomplete="off"
												   requiredMessage="O nome deve ser preenchido."/>
		                              <h:message for="nomeContato" style="color:red" />
								 </div>
	                
  				                 <div class="form-group">
				                      <p:outputLabel value="Telefone" for="telefoneContato" />
									  <p:inputMask id="telefoneContato" value="#{contato.telefone}" mask="(99)99999-9999" 
									  			   styleClass="form-control" required="true"  >	  
									 		<f:validateLength minimum="5" maximum="15" />
									  </p:inputMask>
									  <h:message for="telefoneContato" style="color:red" /> 
								 </div>
								
								
								 <div class="form-group">
								    <div class="col-md-11" style= "padding:0px  !important">
				                      <p:outputLabel value="Endereço" for="endec" required="true"
				                                     requiredMessage="A localizaçao deve ser selecionada." />
									  <p:inputText  value="#{contato.localizacao}" id="endec" styleClass="form-control" />
									</div>  
									
									<div class="col-md-1" style= "padding-right:0px  !important;" >
				                      <p:outputLabel value="Buscar" for="btnEndereco" />
									  <p:button styleClass="form-control" name="btnEndereco" id="btnEndereco" icon="fa fa-fw fa-search"/>
									</div> 
								 </div>
								  <p:outputLabel value="Localizacao não foi selecionada." 
								                 rendered="#{contato.lat == 0}"/>
								 <div id="map_container" style="margin-top: 10px !important"></div>
								
				        	</div>
				        	 <div class="pull-right">
								<p:commandButton value="Cancelar" icon="fa fa-times" action="#{contato.cancelar}"
										 		 styleClass="btn-danger"  immediate="true"
										 		 process="@form" update="@form" />
								<p:spacer width="5" />
							
								<p:commandButton action="#{contato.cadastrar}"
												 ajax="false" icon="fa fa-plus" value="#{contato.acao}"
												 styleClass="btn-primary btn-success" />
								<p:spacer width="5" />
							</div>
				        </div>
				    </div>
				    <h:inputHidden  id="lat" value="#{contato.lat}" />
			        <h:inputHidden  id="lng" value="#{contato.lng}" />
			</h:form>
			<script type="text/javascript">
				var geocoder;
				var map;
				var marker;
			
				function loadMap() {
					var latlng = new google.maps.LatLng(document.getElementById("lat").value, document.getElementById("lng").value);
				    var myOptions = {
				      zoom: 17,
				      center: latlng,
				      mapTypeId: google.maps.MapTypeId.ROADMAP
				    };
				    map = new google.maps.Map(document.getElementById("map_container"),myOptions);
				    geocoder = new google.maps.Geocoder();
				
				    marker = new google.maps.Marker({
				      map: map,
				      draggable: true,
				    });
				    
				    marker.setPosition(latlng);
				    geocoder.geocode({ 'latLng': marker.getPosition() }, function (results, status) {
						if (status == google.maps.GeocoderStatus.OK) {
							if (results[0]) {  
								$('#endec').val(results[0].formatted_address);								
								document.getElementById("lat").value = results[0].geometry.location.lat();
								document.getElementById("lng").value = results[0].geometry.location.lng();
							}
						}
					});
				  }
		
				 $(document).ready(function () {
					 loadMap();
				
					 
						function carregarNoMapa(endereco) {
							geocoder.geocode({ 'address': endereco + ', Brasil', 'region': 'BR' }, function (results, status) {
								if (status == google.maps.GeocoderStatus.OK) {
									if (results[0]) {
										var latitude = results[0].geometry.location.lat();
										var longitude = results[0].geometry.location.lng();
							
										$('#txtEndereco').val(results[0].formatted_address);										
					                   	
					                   	document.getElementById("lat").value = latitude;
										document.getElementById("lng").value = longitude;
							
										var location = new google.maps.LatLng(latitude, longitude);
										marker.setPosition(location);
										map.setCenter(location);
										map.setZoom(16);
									}
								}
							})
						}
						
						$("#endec").click(function() {							
							if($(this).val() != "")
								carregarNoMapa($("#txtEndereco").val());
						})
						
						$("#endec").blur(function() {
							if($(this).val() != "")
								carregarNoMapa($(this).val());
						})
						
						google.maps.event.addListener(marker, 'drag', function () {
							geocoder.geocode({ 'latLng': marker.getPosition() }, function (results, status) {
								if (status == google.maps.GeocoderStatus.OK) {
									if (results[0]) {  
										$('#endec').val(results[0].formatted_address);
										document.getElementById("lat").value = marker.getPosition().lat();
										document.getElementById("lng").value = marker.getPosition().lng();
									}
								}
							});
						});
						
						$("#endec").autocomplete({
							source:function (request, response) {
								geocoder.geocode({ 'address': request.term + ', Brasil', 'region': 'BR' }, function (results, status) {
									response($.map(results, function (item) {
										return {
											label: item.formatted_address,
											value: item.formatted_address,
											latitude: item.geometry.location.lat(),
					          				longitude: item.geometry.location.lng(),
										}
									}));
								})
							},
							select: function (event, ui) {
								document.getElementById("lat").value = ui.item.latitude;
								document.getElementById("lng").value = ui.item.longitude;	
								var location = new google.maps.LatLng(ui.item.latitude, ui.item.longitude);
								marker.setPosition(location);
								map.setCenter(location);
								map.setZoom(16);
							}
						});
				 });
			</script>
	</ui:define>
</ui:composition>
